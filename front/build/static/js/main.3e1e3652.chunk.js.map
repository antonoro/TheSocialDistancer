{"version":3,"sources":["logo_emptybackground.png","signupForm/signupform.js","loginForm/loginform.js","LogIn.js","topheader/topheader.js","linechart/axis/axis.js","linechart/axis/xyaxis.js","linechart/line/line.js","linechart/linechart.js","gamepanel/gamepanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignUpForm","state","username","email","newpassword","confirmpassword","handleInputChange","event","setState","target","name","value","handleSubmit","preventDefault","alert","render","fetch","method","body","JSON","stringify","headers","then","res","json","valid","console","log","id","onSubmit","this","className","type","class","onChange","required","React","Component","LogInForm","action","logInHandleClick","UserLogIn","props","logInvShowalue","logInShowvalue","signUpHandleClick","signUpShowvalue","showWishList","signupForm","logInform","onClick","TopHeader","toggleNavBar","collapsed","collapse","classOne","classTwo","src","mainlogo","alt","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","loggedin","nameuser","logname","Axis","ref","createRef","renderAxis","updateAxis","axis","scale","orient","ticks","node","current","axisBottom","axisLeft","select","call","t","transition","duration","selectAll","transform","XYAxis","xScale","yScale","height","xSettings","ySettings","Line","data","lineGenerator","initialData","map","d","append","datum","attr","updateChart","line","LineChart","updateWidth","windowwidth","window","innerWidth","windowheight","innerHeight","componentDidMount","addEventListener","componentWillReceiveProps","newData","resetState","concat","parentWidth","margins","top","right","bottom","left","width","scaleLinear","domain","extent","range","nice","x","y","curve","curveMonotoneX","require","GamePanel","componentWillUnmount","clearInterval","interval","tick","datavalue","datadays","oldvalue","slope","dailycases","datamax","daysvaccine","Number","gameEnd","countOn","resetGraph","startCount","setInterval","stopCount","resetCount","washHands","stayHome","wearMask","vaccine","toFixed","disabled","Welcome","userState","user","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3e1e3652.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_emptybackground.b92a231a.png\";","import React from 'react';\r\nimport \"../signupForm/signupform.css\";\r\n\r\nclass SignUpForm extends React.Component{\r\n\r\n    state = {\r\n        username:'',\r\n        email:'',\r\n        newpassword:'',\r\n        confirmpassword:''\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value \r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const { newpassword, confirmpassword } = this.state;\r\n        if (newpassword !== confirmpassword) {  \r\n            event.preventDefault();\r\n            alert(\"Passwords don't match\");\r\n            this.setState({confirmpassword: ''});\r\n            this.render();\r\n        }\r\n        else if(newpassword === ''){\r\n            event.preventDefault();\r\n            alert(\"Passwords can't be blank\");\r\n            this.render();\r\n        }\r\n        else{\r\n            fetch('/register', \r\n            {\r\n                method: 'POST', \r\n                body: JSON.stringify({username: `${this.state.username}`,email: `${this.state.email}`, confirmpassword: `${this.state.confirmpassword}`}),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            }).then(res => res.json())\r\n            .then(valid => {\r\n                if(!valid)\r\n                {\r\n                    console.log(\"Value of valid is\", valid);\r\n                    alert(\"Username or email is already registered. Choose different credentials.\")\r\n                    this.render();\r\n                }\r\n                else{\r\n                    console.log(\"Value of valid is\", valid);\r\n                    alert(\"Account created. Please login.\");\r\n                    this.render();\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <form id=\"#signupForm\" onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label>Username:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} required></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Email:</label>\r\n                <input type=\"email\" class=\"form-control\" name=\"email\" onChange={this.handleInputChange} value={this.state.email} required></input>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                <label>Password:</label>\r\n                <input type=\"password\" class=\"form-control\" name=\"newpassword\" onChange={this.handleInputChange} value={this.state.newpassword} required></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Confirm password:</label>\r\n                <input type=\"password\" class=\"form-control\" name=\"confirmpassword\" onChange={this.handleInputChange} value={this.state.confirmpassword} required></input>\r\n            </div>\r\n            <div className=\"row justify-content-center\">    \r\n                <div className=\"col-6\">\r\n                    <button id=\"loginbtn\" type=\"submit\" class=\"btn btn-primary btn-md btn-block\">Register</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React from 'react';\r\nimport \"../loginForm/loginform.css\";\r\n\r\nclass LogInForm extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <form action=\"/login\" method=\"post\">\r\n                <div className=\"form-group\">\r\n                    <label>Username:</label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"username\" required></input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" class=\"form-control\" name=\"password\" required></input>\r\n                </div>\r\n                <div className=\"row justify-content-center\">    \r\n                    <div className=\"col-6\">\r\n                        <button id=\"loginbtn\" onSubmit={this.logInHandleClick} type=\"submit\" class=\"btn btn-primary btn-md btn-block\">Play</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogInForm;\r\n","import React from 'react';\r\nimport './Btn.css';\r\nimport \"typeface-montserrat-alternates\";\r\nimport SignUpForm from \"./signupForm/signupform.js\";\r\nimport LogInForm from \"./loginForm/loginform.js\";\r\n\r\nclass UserLogIn extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            logInShowvalue: true,\r\n            signUpShowvalue: false,\r\n            showWishList: false,\r\n        };\r\n        this.signupForm = <SignUpForm/>;\r\n        this.logInform = <LogInForm/>;\r\n    }\r\n\r\n    logInHandleClick = () => {\r\n\r\n        this.setState(\r\n            {\r\n                logInvShowalue : !this.state.logInShowvalue    \r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    signUpHandleClick = () => {\r\n\r\n    \r\n        this.setState(\r\n            {\r\n                signUpShowvalue : !this.state.signUpShowvalue, \r\n                logInShowvalue : !this.state.logInShowvalue\r\n            }\r\n        )\r\n        \r\n\r\n    }\r\n\r\n    render(){\r\n        \r\n    \r\n        return (\r\n            <div className=\"Btn-header\">\r\n                <div>\r\n                    {(this.state.logInShowvalue) ? this.logInform : ''}\r\n                </div>\r\n                <div className=\"row justify-content-center\"> \r\n                    <div className=\"col-6\">\r\n                        <button id=\"signupbtn\" onClick={this.signUpHandleClick} class=\"btn btn-secondary btn-md btn-block\">{(this.state.signUpShowvalue) ? 'Back' : 'Sign Up'}</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {(this.state.signUpShowvalue) ? this.signupForm : ''}\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\n\r\nexport default UserLogIn;","import React from 'react';\r\nimport mainlogo from '../logo_emptybackground.png';\r\nimport \"../topheader/topheader.css\";\r\nimport \"bootstrap/js/src/collapse.js\";\r\n\r\nclass TopHeader extends React.Component{\r\n\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            collapsed: true,\r\n        };\r\n    }\r\n\r\n    toggleNavBar = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const collapse = this.state.collapsed;\r\n        const classOne = collapse ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n        const classTwo = collapse ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <div className=\"container\">\r\n                        <img id=\"toplogo\" src={mainlogo} alt=\"Main logo\"></img>\r\n                        <a className=\"navbar-brand\" href=\"/\">The Social Distancer</a>\r\n                        <button onClick={this.toggleNavBar} className={`${classTwo}`} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className={`${classOne}`} id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    { (!this.props.loggedin) ? \r\n                                        <form action=\"/login\" method=\"post\"> \r\n                                            <input type=\"hidden\" className=\"form-control\" name=\"username\" value=\"guest\"required></input>\r\n                                            <input type=\"hidden\" className=\"form-control\" name=\"password\" value=\"guest1\" required></input>\r\n                                        </form>\r\n                                        \r\n                                    : \r\n                                        <a className=\"nav-link disabled\">{this.props.nameuser}</a>\r\n                                    }\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a class=\"nav-link\" href=\"https://antonoro.github.io\">About the author</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a class=\"nav-link  active\" href=\"/logout\">{this.props.logname}</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TopHeader;","import React from \"react\";\r\nimport { select, selectAll } from \"d3-selection\";\r\nimport { axisBottom, axisLeft } from \"d3-axis\";\r\nimport { transition } from 'd3-transition';\r\n\r\nclass Axis extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.ref = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.renderAxis();\r\n  }\r\n  componentDidUpdate() {\r\n    this.updateAxis();\r\n  }\r\n  renderAxis() {\r\n    const { scale, orient, ticks } = this.props;\r\n    const node = this.ref.current;\r\n    let axis;\r\n\r\n    if (orient === \"bottom\") {\r\n      axis = axisBottom(scale).ticks(ticks);\r\n    }\r\n    if (orient === \"left\") {\r\n      axis = axisLeft(scale)\r\n        .ticks(ticks);\r\n    }\r\n    select(node).call(axis);\r\n  }\r\n  updateAxis() {\r\n    const { scale, orient, ticks } = this.props;\r\n    const t = transition().duration(1000)\r\n\r\n    if (orient === \"left\") {\r\n      const axis = axisLeft(scale).ticks(ticks); \r\n      selectAll(`.${orient}`).transition(t).call(axis)\r\n    }\r\n    if (orient === \"bottom\") {\r\n      const axis = axisBottom(scale).ticks(ticks); \r\n      selectAll(`.${orient}`).transition(t).call(axis)\r\n    }\r\n  }\r\n  render() {\r\n    const { orient, transform } = this.props;\r\n    return (\r\n      <g\r\n        ref={this.ref}\r\n        transform={transform}\r\n        className={`${orient} axis`}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Axis;\r\n","import React from 'react';\r\nimport Axis from './axis';\r\n\r\nconst XYAxis = ({ xScale, yScale, height }) => {\r\n  const xSettings = {\r\n    scale: xScale,\r\n    orient: 'bottom',\r\n    transform: `translate(0, ${height})`,\r\n  };\r\n  const ySettings = {\r\n    scale: yScale,\r\n    orient: 'left',\r\n    transform: 'translate(0, 0)',\r\n    ticks: 6,\r\n  };\r\n  return (\r\n    <g className=\"axis-group\">\r\n      <Axis {...xSettings} />\r\n      <Axis {...ySettings} />\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default XYAxis;","import React from 'react';\r\nimport { select, selectAll } from 'd3-selection';\r\nimport { transition } from 'd3-transition';\r\n\r\nclass Line extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.ref = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    const node = this.ref.current;\r\n    const { xScale, yScale, data, lineGenerator } = this.props;\r\n\r\n    const initialData = data.map(d => ({\r\n      name: d.name,\r\n      value: 0\r\n    }));\r\n\r\n    select(node)\r\n      .append('path')\r\n      .datum(initialData)\r\n      .attr('id', 'line')\r\n      .attr('stroke', 'black')\r\n      .attr('stroke-width', 2)\r\n      .attr('fill', 'none')\r\n      .attr('d', lineGenerator);\r\n\r\n    this.updateChart()\r\n  }\r\n  componentDidUpdate() {\r\n    this.updateChart();\r\n  }\r\n  updateChart() {\r\n    const {\r\n          lineGenerator, xScale, yScale, data,\r\n        } = this.props;\r\n\r\n    const t = transition().duration(1000);\r\n\r\n    const line = select('#line');\r\n    const dot = selectAll('.circle');\r\n\r\n    line\r\n      .datum(data)\r\n      .transition(t)\r\n      .attr('d', lineGenerator);\r\n\r\n    // dot\r\n    //   .data(data)\r\n    //   .transition(t)\r\n    //   .attr('cx', (d, key) => xScale(key))\r\n    //   .attr('cy', d => yScale(d.count));\r\n  }\r\n  render() {\r\n    return <g className=\"line-group\" ref={this.ref} />;\r\n  }\r\n}\r\n\r\nexport default Line;","import React, {useState, useEffect} from 'react';\r\nimport { scaleLinear, scaleBand } from 'd3-scale';\r\nimport { line, curveMonotoneX } from 'd3-shape';\r\nimport { extent } from 'd3-array';\r\nimport XYAxis from '../linechart/axis/xyaxis.js';\r\nimport Line from '../linechart/line/line.js';\r\nimport { transition } from 'd3-transition';\r\n\r\nclass LineChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            data: [\r\n            { name: 0, value: 0 },\r\n            ],\r\n            windowwidth: window.innerWidth, \r\n            windowheight: window.innerHeight\r\n        };\r\n    }\r\n\r\n    updateWidth = () => {\r\n        this.setState({\r\n            windowwidth: window.innerWidth, \r\n            windowheight: window.innerHeight\r\n        });\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        window.addEventListener('resize', this.updateWidth);\r\n    }\r\n\r\n    componentWillReceiveProps = (props) => {\r\n        \r\n        this.newData(props);\r\n        \r\n    }\r\n\r\n    newData = (props) => {\r\n        if(props.resetState !== true)\r\n        {\r\n            this.setState({\r\n                data: this.state.data.concat([{name: props.name, value: props.value}])\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                data:[\r\n                    { name: 0, value: 0 },\r\n                    ] \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { data } = this.state;\r\n        const parentWidth = this.state.windowwidth/1.5;\r\n\r\n        const margins = {\r\n            top: 20,\r\n            right: 0.06*this.state.windowwidth,\r\n            bottom: 20,\r\n            left: 0.06*this.state.windowwidth,\r\n          };\r\n\r\n        const width = parentWidth - margins.left - margins.right;\r\n        const height = this.state.windowheight/2 - margins.top - margins.bottom;\r\n\r\n        const ticks = 5;\r\n        const t = transition().duration(1000);\r\n\r\n        const xScale = scaleLinear()\r\n        .domain(extent(data, d => d.name))\r\n        .range([0, width]).nice();\r\n        \r\n        const yScale = scaleLinear()\r\n        .domain(extent(data, d => d.value))\r\n        .range([height, 0])\r\n        .nice();\r\n\r\n        const lineGenerator = line()\r\n        .x(d => xScale(d.name))\r\n        .y(d => yScale(d.value))\r\n        .curve(curveMonotoneX);\r\n        \r\n        return (\r\n            <div>\r\n                <svg\r\n                    className=\"lineChartSvg\"\r\n                    width={width + margins.left + margins.right}\r\n                    height={height + margins.top + margins.bottom}\r\n                >\r\n                <g transform={`translate(${margins.left}, ${margins.top})`}>\r\n                    <XYAxis {...{ xScale, yScale, height, ticks, t }} />\r\n                    <Line data={data} xScale={xScale} yScale={yScale} width={width} height={height} />\r\n                </g>\r\n                <g transform={`translate(${margins.left}, ${margins.top})`}>\r\n                    <XYAxis {...{ xScale, yScale, height, ticks, t }} />\r\n                    <Line data={data} xScale={xScale} yScale={yScale} lineGenerator={lineGenerator} width={width} height={height} />\r\n                </g>\r\n                </svg>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LineChart;\r\n","import React from 'react';\r\nimport './gamepanel.css';\r\nimport LineChart from '../linechart/linechart.js';\r\nrequire(\"typeface-montserrat-alternates\");\r\n\r\nclass GamePanel extends React.Component{\r\n    \r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            datadays: 0,\r\n            datavalue: 0,\r\n            datamax: 0,\r\n            dailycases: 0,\r\n            daysvaccine: 100,\r\n            oldvalue: 0,\r\n            countOn: false,\r\n            resetGraph: false,\r\n            gameEnd: false, \r\n            slope: 0.2\r\n        };\r\n    }\r\n\r\n    componentWillUnmount =() => {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    tick = () => {\r\n        const oldvalue = this.state.datavalue;\r\n\r\n        //create first case at beginning\r\n        if(this.state.datadays === 0)\r\n        {\r\n            this.setState({datavalue: 1});\r\n        }\r\n\r\n        // Update active number of cases\r\n        this.setState({\r\n            oldvalue: this.state.datavalue,\r\n            datavalue: (this.state.datavalue*(1+this.state.slope)),\r\n        });\r\n\r\n        // calculate daily cases and adjust slope so it's always minimally increasing\r\n        this.setState({\r\n            dailycases: this.state.datavalue - this.state.oldvalue,\r\n            slope: this.state.slope + 0.0005,\r\n        });\r\n\r\n        // update maximum cases\r\n        if(this.state.datavalue > this.state.datamax)\r\n        {\r\n            this.setState({\r\n                datamax: this.state.datavalue,\r\n            });\r\n        }\r\n\r\n        // update days remaining until vaccine is available\r\n        if(this.state.daysvaccine > 0)\r\n        {\r\n            this.setState({daysvaccine: this.state.daysvaccine - 1});\r\n        }\r\n\r\n        // If user gets to 20,000,000 deaths, stop game  \r\n        if((this.state.datamax/20) > Number(20000000))\r\n        {\r\n            clearInterval(this.interval);\r\n            alert(\"That's the worst epidemic in World's history ; that's why Public Health measures are important!\");\r\n            this.setState({\r\n                gameEnd: true\r\n            });\r\n        }\r\n        // after a year, stop game and clock back to zero days\r\n        if(this.state.datadays < 365){\r\n            this.setState({\r\n                datadays : this.state.datadays + 1,\r\n            });\r\n\r\n        }\r\n        else {\r\n            clearInterval(this.interval);\r\n            this.setState({\r\n                datadays : 0,\r\n                countOn: false,\r\n                resetGraph: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    startCount = () => {\r\n        if(this.state.countOn !== true && this.state.gameEnd !== true)\r\n        {\r\n            this.setState({\r\n                countOn: true,\r\n                resetGraph: false,\r\n                datadays: this.state.datadays\r\n            });\r\n            this.interval = setInterval(() => this.tick(), 1000);\r\n        }\r\n    }\r\n\r\n    stopCount = () => {\r\n        clearInterval(this.interval);\r\n        this.setState({\r\n            countOn: false\r\n        });\r\n    }\r\n\r\n    resetCount = () => {\r\n        clearInterval(this.interval);\r\n        this.setState({\r\n            datadays: 0,\r\n            datavalue: 0,\r\n            daysvaccine: 100,\r\n            dailycases: 0,\r\n            oldvalue: 0,\r\n            datamax: 0,\r\n            resetGraph: true,\r\n            countOn: false,\r\n            gameEnd: false\r\n        });\r\n    };\r\n\r\n    washHands = () => {\r\n        this.setState(\r\n            {slope: 0.98*this.state.slope}\r\n        );\r\n    }\r\n\r\n    stayHome = () => {\r\n        \r\n        if(this.state.slope > 0.001)\r\n        {\r\n            this.setState(\r\n                {slope: 0.92*this.state.slope}\r\n            );\r\n    \r\n        }\r\n        else\r\n        {\r\n            this.setState(\r\n                {slope: this.state.slope - 0.0005}\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    wearMask = () => {\r\n        this.setState(\r\n            {slope: 0.96*this.state.slope}\r\n        );\r\n         \r\n    }\r\n\r\n    vaccine = () => {\r\n        this.setState(\r\n            {slope: this.state.slope - 0.008}\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"gamepanel\">\r\n            <div id=\"#datainfo\" className=\"row justify-content-center\">\r\n               \r\n                <div className=\"col-6 text-center\">\r\n                    <label>Maximum COVID-19 cases :  </label>\r\n                    <output type=\"number\">{Number(this.state.datamax).toFixed(0)}</output>\r\n                </div>\r\n                <div className=\"col-6 text-center\">\r\n                    <label>Death toll :  </label>\r\n                    <output type=\"number\">{Number(this.state.datamax / 20).toFixed(0)}</output>\r\n                </div>\r\n                \r\n            </div>\r\n            <div id=\"#linechart\" className=\"row justify-content-center\">\r\n                <LineChart name={this.state.datadays} value={this.state.datavalue} resetState={this.state.resetGraph}/>\r\n            </div>\r\n\r\n            <div id=\"#datainfo\" className=\"row justify-content-center\">\r\n                <div className=\"col-5 text-center\">\r\n                    <label>Days</label>\r\n                </div>\r\n                \r\n            </div>\r\n            <div id=\"#datainfo\" className=\"row justify-content-center\">\r\n                <div className=\"col-1\">\r\n\r\n                </div>\r\n                <div className=\"col-5 text-center\">\r\n                    <label>Active COVID-19 cases :  </label>\r\n                    <output type=\"number\">{Number(this.state.datavalue).toFixed(0)}</output>\r\n                </div>\r\n                <div className=\"col-5 text-center\">\r\n                    <label>Days since start of epidemic :  </label>\r\n                    <output type=\"number\">{this.state.datadays}</output>\r\n                </div>\r\n                <div className=\"col-1\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"#datainfo\" className=\"row justify-content-center\">\r\n                <div className=\"col-1\">\r\n\r\n                </div>\r\n                <div className=\"col-5 text-center\">\r\n                    <label>Daily new COVID-19 cases :  </label>\r\n                    <output type=\"number\">{Number(this.state.dailycases).toFixed(0)}</output>\r\n                </div>\r\n                <div className=\"col-5 text-center\">\r\n                    <label>Days remaining until vaccine available :  </label>\r\n                    <output type=\"number\">{this.state.daysvaccine}</output>\r\n                </div>\r\n                <div className=\"col-1\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"#startstoprow\" className=\"row justify-content-center\">\r\n                <div className=\"col-3\">\r\n                    <button onClick={this.startCount} className=\"btn btn-secondary btn-md btn-block\">Start</button>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <button onClick={this.stopCount} className=\"btn btn-danger btn-md btn-block\">Stop</button>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <button onClick={this.resetCount} className=\"btn btn-primary btn-md btn-block\">Reset</button>\r\n                </div>\r\n            </div>\r\n            <div id=\"#datainfo\" className=\"row justify-content-center\">\r\n                <div className=\"col-1\">\r\n\r\n                </div>\r\n                <div className=\"col-10 text-center\">\r\n                    <label>Public Health Actions : Click repeatedly to see effect on propagation curve</label>\r\n                </div>\r\n                \r\n                <div className=\"col-1\">\r\n\r\n                </div>\r\n            </div>\r\n            <div id=\"#actionsrow\" className=\"row justify-content-center\">    \r\n                    <div className=\"col-3\">\r\n                        <button onClick={this.stayHome} className=\"btn btn-warning btn-md btn-block\">Stay home</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <button onClick={this.wearMask} className=\"btn btn-warning btn-md btn-block\">Wear mask</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <button onClick={this.washHands} className=\"btn btn-warning btn-md btn-block\">Wash hands</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        { this.state.daysvaccine > 0 ?  \r\n                            <button  onClick={this.vaccine} className=\"btn btn-dark btn-md btn-block\" disabled>Vaccine</button>\r\n                        :\r\n                            <button  onClick={this.vaccine} className=\"btn btn-info btn-md btn-block\">Vaccine</button>\r\n                        }\r\n                    </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default GamePanel;\r\n","import React, { useState, useEffect } from 'react';\nimport mainlogo from './logo_emptybackground.png';\nimport UserLogIn from './LogIn';\nimport TopHeader from './topheader/topheader.js';\nimport GamePanel from './gamepanel/gamepanel.js';\nimport \"typeface-montserrat-alternates\";\nimport './App.css';\nimport \"typeface-dosis\";\nimport 'jquery/dist/jquery.min.js';\nimport 'popper.js/dist/popper.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\n\n\n\nclass Welcome extends React.Component {\n  \n  constructor(props){\n    super();\n    this.state = {\n      userState: null, \n    };\n    \n  }\n\n  componentDidMount(){\n    console.log(\"getUser\");\n    fetch(\"/getUser\")\n    .then(res => res.json())\n    .then(user => this.setState({userState: user}));\n  }\n\n  \n  \n  render = () => {\n\n    const logintag = 'Log in';\n    const logouttag = 'Log out';\n    console.log(\"Rendering Welcome\");\n    return (\n      <div className=\"App\">\n        <header className=\"Top-header\">\n          {!this.state.userState ?\n            <TopHeader logname={logintag}/>\n          :\n            <TopHeader logname={logouttag} nameuser={`Welcome, ${this.state.userState.username}`} loggedin='true' />\n          }\n        </header>\n        \n        <body>\n          <div className=\"container-fluid\">  \n            {!this.state.userState ? \n            <div>\n              <div className=\"row justify-content-center\">  \n                <div className=\"App-header\">\n                  <img src={mainlogo} className=\"App-logo\" alt=\"logo\" />\n                  <h1>Welcome to The Social Distancer!</h1>\n                  <h2>A game where you make a difference and save lives</h2>\n                  <form action=\"/login\" method=\"post\"> \n                    <input type=\"hidden\" className=\"form-control\" name=\"username\" value=\"guest\"required></input>\n                    <input type=\"hidden\" className=\"form-control\" name=\"password\" value=\"guest1\" required></input>\n                    <button type=\"submit\" className=\"btn btn-outline-success\">Play as Guest</button>\n                  </form> \n                </div>\n              </div>\n              <div className=\"row justify-content-center\">  \n                  <UserLogIn />\n              </div>\n            </div>   \n            : <div className=\"row\">\n                <div className=\"col-2\">\n                  <div className=\"row justify-content-end top-buffer\">\n                    <h5 className=\"rotated\">Active COVID-19 cases</h5>\n                  </div>\n                </div>\n                <div className=\"col-8\">\n                  <GamePanel />\n                </div>\n                <div className=\"col-2\">\n                </div>\n              </div>\n            }\n              \n          </div>  \n        </body>\n      </div> \n    );\n  }\n}\n\nexport default Welcome;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport Welcome from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Welcome />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}